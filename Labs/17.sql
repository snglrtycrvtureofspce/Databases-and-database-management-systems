SELECT AVG(price) AS average_price FROM products;

SELECT SUM(delivery_cost) AS total_cost FROM orders;

SELECT MIN(price) AS min_price FROM products;

SELECT MAX(price) AS max_price FROM products;

SELECT COUNT(*) AS total_orders FROM orders;

/* Количество заказов по каждому типу доставки: */
SELECT delivery_type, COUNT(*) AS total_orders FROM orders GROUP BY delivery_type;

/* Количество заказов, сделанных каждым заказчиком */
SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id;

/* Средняя стоимость доставки по каждому типу доставки */
SELECT delivery_type, AVG(delivery_cost) AS average_delivery_cost FROM orders GROUP BY delivery_type;

/* Общая стоимость доставки для каждого заказчика */
SELECT customer_id, SUM(delivery_cost) AS total_delivery_cost FROM orders GROUP BY customer_id;

/* Заказы, у которых общая стоимость доставки превышает 1000 */
SELECT * FROM orders WHERE delivery_cost > 1000;

/*

1) Особенности использования агрегатных функций:
   1.1) Агрегатные функции выполняют вычисления над набором значений столбцов и возвращают единственное значение результатов.
   1.2) Обычно агрегатные функции применяются в комбинации с операторами SELECT, GROUP BY и HAVING.
   1.3) Некоторые из популярных агрегатных функций включают AVG (среднее значение), SUM (сумма), MIN (минимальное значение), 
   MAX (максимальное значение) и COUNT (количество).
   1.4) Агрегатные функции могут использоваться для анализа данных, создания сводных отчетов и выполнения различных вычислений.
2) Оператор GROUP BY используется для группировки результатов запроса по одному или нескольким столбцам. 
Он позволяет объединить строки с одинаковыми значениями в указанных столбцах и применить агрегатные функции 
к каждой группе отдельно. GROUP BY обычно используется в комбинации с агрегатными функциями, 
чтобы выполнить вычисления по группам данных.
3) Оператор HAVING используется для отбора данных после осуществления группировки (GROUP BY). 
Он позволяет задавать условия, которым должны удовлетворять группы данных, чтобы быть включенными в результат. 
HAVING применяется после GROUP BY и позволяет фильтровать группы на основе агрегатных функций или других выражений.
4) При группировке данных, если среди значений столбца встречается значение NULL, 
то NULL-значения будут сгруппированы отдельно от других значений. Это означает, 
что каждая группа будет содержать NULL-значения отдельно от других ненулевых значений. 
Если необходимо объединить NULL-значения с другой группой, 
можно использовать функцию агрегации COALESCE или условие в операторе HAVING, 
чтобы учесть NULL-значения при определении условий фильтрации или вычислений.

*/
